/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clinica;

import datos.Usuario;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author keiinerp
 */
public class RegistrarUsuario extends javax.swing.JDialog {

    public static int registro = 0, eliminado = 0, editado = 0;
    /**
     * Creates new form RegistrarUsuario
     */
    ArrayList<Usuario> usuariosRegistrados;

    public RegistrarUsuario(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        registro = 0;
        usuariosRegistrados = Archivo.leerUsuarioBinario();
        pintarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        identificacionText = new javax.swing.JTextField();
        nombreText = new javax.swing.JTextField();
        edadText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tipoPersonaCombo = new javax.swing.JComboBox<>();
        userText = new javax.swing.JTextField();
        guardarBoton = new javax.swing.JButton();
        buscarBoton = new javax.swing.JButton();
        editarBoton = new javax.swing.JButton();
        eliminarBoton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        usuariosTabla = new javax.swing.JTable();
        passText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro de usuarios");

        jLabel1.setText("Identificación:");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Edad:");

        jLabel4.setText("Tipo:");

        jLabel6.setText("Nombre Usuario:");

        jLabel7.setText("Contraseña:");

        tipoPersonaCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "ADMINISTRADOR", "PACIENTE" }));

        guardarBoton.setText("Añadir");
        guardarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarBotonActionPerformed(evt);
            }
        });

        buscarBoton.setText("Buscar");

        editarBoton.setText("Editar");
        editarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarBotonActionPerformed(evt);
            }
        });

        eliminarBoton.setText("Eliminar");
        eliminarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarBotonActionPerformed(evt);
            }
        });

        usuariosTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usuariosTablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(usuariosTabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(guardarBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eliminarBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editarBoton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tipoPersonaCombo, 0, 1, Short.MAX_VALUE)
                            .addComponent(edadText, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                                .addComponent(nombreText, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(identificacionText)))
                        .addGap(93, 93, 93)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userText, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                            .addComponent(passText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buscarBoton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(identificacionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nombreText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(userText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscarBoton))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(passText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(edadText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tipoPersonaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarBoton)
                    .addComponent(editarBoton)
                    .addComponent(eliminarBoton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBotonActionPerformed
        guardar();
    }//GEN-LAST:event_guardarBotonActionPerformed

    private void editarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarBotonActionPerformed
        editar();
    }//GEN-LAST:event_editarBotonActionPerformed

    private void eliminarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarBotonActionPerformed
        int fila = usuariosTabla.getSelectedRow();
        String usuarioNombre = null;
        Usuario usuario = null;
        for (int i = 0; i < usuariosRegistrados.size(); i++) {
            if (i == fila) {
                usuarioNombre = usuariosRegistrados.get(i).getUsuario();
                usuario = usuariosRegistrados.get(i);
            }
        }
        if (usuarioNombre.equals("")) {
            JOptionPane.showMessageDialog(this, "Seleccione algun usuario de la tabla");
        } else {
            JOptionPane.showMessageDialog(this, "El usuario " + usuarioNombre + " fue eliminado");
            for (int i = 0; i < usuariosRegistrados.size(); i++) {
                usuariosRegistrados.remove(usuario);
                eliminado = 1;
                Archivo.escribirListaUsuarios(usuariosRegistrados);
                usuariosRegistrados = Archivo.leerUsuarioBinario();
                limpiar();
                pintarTabla();
            }
        }
    }//GEN-LAST:event_eliminarBotonActionPerformed

    private void usuariosTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usuariosTablaMouseClicked
        int numeroFila = 0;
        if (evt.getClickCount() == 1) {
            numeroFila = usuariosTabla.getSelectedRow();
            for (int i = 0; i < usuariosRegistrados.size(); i++) {
                Usuario get = usuariosRegistrados.get(numeroFila);
                identificacionText.setText(get.getIdentificacion());
                nombreText.setText(get.getNombre());
                edadText.setText(String.valueOf(get.getEdad()));
                userText.setText(get.getUsuario());
                passText.setText(get.getClave());
                tipoPersonaCombo.setSelectedItem(get.getTipo());
            }
        }
    }//GEN-LAST:event_usuariosTablaMouseClicked
    public void limpiar() {
        identificacionText.setText("");
        nombreText.setText("");
        edadText.setText("");
        userText.setText("");
        passText.setText("");
        tipoPersonaCombo.setSelectedItem("SELECCIONE");
    }

    public void repetidoEnTabla() {
        int numeroFila = usuariosTabla.getSelectedRow();
        for (Usuario usuarioRegistrado : usuariosRegistrados) {
            usuarioRegistrado = usuariosRegistrados.get(numeroFila);
            if ((repetido() == 1) && (!usuarioRegistrado.getUsuario().equals(userText.getText())) || (repetido() == 1) && (!usuarioRegistrado.getIdentificacion().equals(identificacionText.getText()))) {
                JOptionPane.showMessageDialog(this, "Está duplicando los datos");
                condicionRepetido = 1;
            }
        }
    }

    public void editar() {
        String user, clave, nombre, cedula, tipo;
        int edad = 0;
        int i = usuariosTabla.getSelectedRow();
        nombre = (String) nombreText.getText();
        cedula = identificacionText.getText();
        user = userText.getText();
        tipo = (String) tipoPersonaCombo.getSelectedItem();
        clave = passText.getText();
        try {
            edad = Integer.valueOf(edadText.getText());
            repetido();
            repetidoEnTabla();
            validacionesVacio();
            repetido();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Letras en campos numericos");
        }
        if (condicionVacio == 0 && condicionRepetido == 0) {
            Usuario usuario = new Usuario();
            usuario.setClave(clave);
            usuario.setEdad(edad);
            usuario.setIdentificacion(cedula);
            usuario.setTipo(tipo);
            usuario.setUsuario(user);
            usuario.setNombre(nombre);
            usuariosRegistrados.set(i, usuario);
            pintarTabla();
            limpiar();
            editado = 1;
        } else {
            JOptionPane.showMessageDialog(this, "Solo un registro por persona");
        }

    }

    public void validacionesVacio() {
        if (nombreText.equals("") || edadText.equals("") || identificacionText.equals("") || tipoPersonaCombo.getSelectedItem().equals("SELECCIONE") || identificacionText.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Rellene todos los campos marcados con *");
            condicionVacio = 1;
        } else {
            condicionVacio = 0;
        }
    }

    public void guardar() {
        String user, clave, nombre, cedula, tipo;
        int edad;
        nombre = (String) nombreText.getText();
        cedula = identificacionText.getText();
        user = userText.getText();
        tipo = (String) tipoPersonaCombo.getSelectedItem();
        clave = passText.getText();
        condicionRepetido = repetido();
        validacionesVacio();
        try {
            edad = Integer.valueOf(edadText.getText());
            if (condicionVacio == 0 && condicionRepetido == 0) {
                Usuario usuario = new Usuario();
                usuario.setClave(clave);
                usuario.setEdad(edad);
                usuario.setIdentificacion(cedula);
                usuario.setNombre(nombre);
                usuario.setTipo(tipo);
                usuario.setUsuario(user);
                usuariosRegistrados.add(usuario);
                Archivo.escribirListaUsuarios(usuariosRegistrados);
                registro = 1;
                limpiar();
                pintarTabla();
            }
            if (condicionVacio == 1) {
                JOptionPane.showMessageDialog(this, "Complete todos los campos");
            } else if (condicionRepetido == 1) {
                JOptionPane.showMessageDialog(this, "Un registro por persona");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Letras en campos numericos");
        }
    }

    public void pintarTabla() {

        DefaultTableModel modelo = new DefaultTableModel();
        String columnas[] = {"CEDULA", "NOMBRE", "TIPO", "USUARIO", "CLAVE"};
        modelo.setColumnIdentifiers(columnas);
        for (Usuario u : usuariosRegistrados) {
            String[] filas = {u.getIdentificacion(), u.getNombre(), u.getTipo(), u.getUsuario(), u.getClave()};
            modelo.addRow(filas);
        }
        usuariosTabla.setModel(modelo);
    }

    public int repetido() {
        int condicionRepetidoFuncion = 0;
        for (Usuario p : usuariosRegistrados) {
            if (p.getIdentificacion().equals(identificacionText.getText()) || p.getUsuario().equals(userText.getText())) {
                condicionRepetidoFuncion = 1;
            } else {
                condicionRepetidoFuncion = 0;
            }
        }
        return condicionRepetidoFuncion;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarBoton;
    private javax.swing.JTextField edadText;
    private javax.swing.JButton editarBoton;
    private javax.swing.JButton eliminarBoton;
    private javax.swing.JButton guardarBoton;
    private javax.swing.JTextField identificacionText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombreText;
    private javax.swing.JTextField passText;
    private javax.swing.JComboBox<String> tipoPersonaCombo;
    private javax.swing.JTextField userText;
    private javax.swing.JTable usuariosTabla;
    // End of variables declaration//GEN-END:variables
 public int condicionVacio;
    public int condicionRepetido;
}
